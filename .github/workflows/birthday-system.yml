# .github/workflows/birthday-system-easy.yml
# üéÇ Sistema PM - Vers√£o F√°cil para Iniciantes

name: üéÇ Sistema PM Autom√°tico (F√°cil)

on:
  # ‚è∞ EXECU√á√ÉO AUTOM√ÅTICA - A cada 30 minutos (mais frequente)
  schedule:
    - cron: '*/30 * * * *'  # A cada 30 minutos
  
  # üöÄ EXECU√á√ÉO MANUAL - Bot√£o no GitHub
  workflow_dispatch:
    inputs:
      modo:
        description: 'Escolha o modo'
        required: true
        default: 'verificar'
        type: choice
        options:
          - verificar
          - teste
          - forcar

# üåç Configura√ß√µes globais
env:
  TZ: America/Sao_Paulo

jobs:
  # üéñÔ∏è JOB PRINCIPAL - Verificar Anivers√°rios
  verificar-aniversarios:
    name: üîç Verificar Anivers√°rios PM
    runs-on: ubuntu-latest
    
    steps:
    # üì• 1. Baixar c√≥digo
    - name: üì• Baixar c√≥digo do GitHub
      uses: actions/checkout@v4
      
    # üü¢ 2. Configurar Node.js
    - name: üü¢ Preparar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'scripts/package-lock.json'
        
    # ‚è∞ 3. Mostrar hor√°rio
    - name: ‚è∞ Mostrar hor√°rio do Brasil
      run: |
        echo "üáßüá∑ Hor√°rio do Brasil: $(TZ=America/Sao_Paulo date)"
        echo "üåç Hor√°rio UTC: $(date)"
        echo "üìÖ Dia da semana: $(TZ=America/Sao_Paulo date +%u) (1=Segunda, 7=Domingo)"
        
    # üì¶ 4. Instalar depend√™ncias
    - name: üì¶ Instalar depend√™ncias
      run: |
        cd scripts
        echo "üì¶ Instalando depend√™ncias..."
        npm install
        echo "‚úÖ Depend√™ncias instaladas!"
        
    # üîç 5. EXECUTAR VERIFICA√á√ÉO PRINCIPAL
    - name: üîç Executar verifica√ß√£o de anivers√°rios
      env:
        # üîê Vari√°veis secretas (j√° configuradas)
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        TWILIO_FROM_NUMBER: ${{ secrets.TWILIO_FROM_NUMBER }}
        TWILIO_TO_NUMBER: ${{ secrets.TWILIO_TO_NUMBER }}
        
        # ‚öôÔ∏è Configura√ß√µes do modo
        TEST_MODE: ${{ github.event.inputs.modo == 'teste' }}
        FORCE_SEND: ${{ github.event.inputs.modo == 'forcar' }}
        
      run: |
        cd scripts
        
        echo "üéñÔ∏è === INICIANDO VERIFICA√á√ÉO PM ==="
        echo "üìÖ Data/Hora: $(TZ=America/Sao_Paulo date)"
        echo "üéØ Modo: ${{ github.event.inputs.modo || 'automatico' }}"
        echo "üïí Executando a cada 30 minutos automaticamente"
        echo ""
        
        # Executar com timeout de 5 minutos
        timeout 300 node birthday-checker.js || {
          echo "‚ö†Ô∏è Timeout ou erro - mas isso √© normal √†s vezes"
          echo "üí° Sistema continuar√° tentando na pr√≥xima execu√ß√£o"
          exit 0
        }
        
        echo ""
        echo "‚úÖ Verifica√ß√£o PM conclu√≠da!"
        
    # üìä 6. Mostrar logs se existirem
    - name: üìä Mostrar logs (se existir)
      if: always()
      run: |
        cd scripts
        
        echo "üìã === LOGS DO SISTEMA ==="
        
        # Verificar se h√° logs de hoje
        LOG_FILE="logs/execution-$(date +%Y-%m-%d).log"
        if [ -f "$LOG_FILE" ]; then
          echo "üìÑ Log encontrado: $LOG_FILE"
          echo "üìã √öltimas 10 linhas:"
          tail -10 "$LOG_FILE"
        else
          echo "‚ÑπÔ∏è Nenhum log encontrado hoje"
        fi
        
        echo ""
        echo "üîç Verificando estrutura de arquivos:"
        ls -la logs/ 2>/dev/null || echo "üìÅ Pasta logs n√£o existe ainda"
        
    # üì§ 7. Salvar logs no GitHub
    - name: üì§ Salvar logs no reposit√≥rio
      if: always()
      run: |
        # Configurar git
        git config --local user.email "sistema-pm@github.com"
        git config --local user.name "Sistema PM Autom√°tico"
        
        # Verificar se h√° mudan√ßas
        if [ -n "$(git status --porcelain)" ]; then
          echo "üìù Salvando logs no GitHub..."
          
          git add logs/ reports/ 2>/dev/null || true
          
          # Criar mensagem do commit
          COMMIT_MSG="üìä Sistema PM - $(TZ=America/Sao_Paulo date '+%d/%m/%Y %H:%M')"
          
          git commit -m "$COMMIT_MSG" || {
            echo "‚ÑπÔ∏è Nada novo para salvar"
            exit 0
          }
          
          git push || {
            echo "‚ö†Ô∏è Erro no push - mas n√£o √© cr√≠tico"
            echo "üí° Logs ser√£o salvos na pr√≥xima execu√ß√£o"
            exit 0
          }
          
          echo "‚úÖ Logs salvos no GitHub!"
        else
          echo "‚ÑπÔ∏è Nenhum log novo para salvar"
        fi

  # üìä JOB SECUND√ÅRIO - Relat√≥rio (apenas 1x por dia)
  relatorio-diario:
    name: üìä Relat√≥rio Di√°rio PM
    runs-on: ubuntu-latest
    # ‚è∞ S√≥ executar √†s 8h da manh√£ (11h UTC)
    if: github.event.schedule == '0 11 * * *' || github.event.inputs.modo == 'relatorio'
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: üìä Gerar relat√≥rio di√°rio
      env:
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        TWILIO_FROM_NUMBER: ${{ secrets.TWILIO_FROM_NUMBER }}
        TWILIO_TO_NUMBER: ${{ secrets.TWILIO_TO_NUMBER }}
      run: |
        cd scripts
        npm install
        
        echo "üìä === RELAT√ìRIO DI√ÅRIO PM ==="
        echo "üìÖ $(TZ=America/Sao_Paulo date)"
        
        # Executar relat√≥rio se existir
        if [ -f "daily-report.js" ]; then
          node daily-report.js || echo "‚ö†Ô∏è Erro no relat√≥rio - continuando"
        else
          echo "‚ÑπÔ∏è Script de relat√≥rio n√£o encontrado - pulando"
        fi

# üéØ RESUMO DO QUE ESTE WORKFLOW FAZ:
# 
# ‚è∞ EXECU√á√ÉO:
# - A cada 30 minutos (ao inv√©s de 1 hora)
# - Bot√£o manual no GitHub para testar
# 
# üîç VERIFICA√á√ÉO:
# - Conecta no Firebase
# - Verifica anivers√°rios
# - Envia WhatsApp se necess√°rio
# - Salva logs automaticamente
# 
# üìä RELAT√ìRIO:
# - 1x por dia √†s 8h
# - Resumo completo do sistema
# 
# üõ°Ô∏è SEGURAN√áA:
# - Todas as senhas ficam nos Secrets
# - Logs salvos no pr√≥prio GitHub
# - Timeout para evitar travamentos
# 
# üì± MONITORAMENTO:
# - Logs salvos automaticamente
# - Status vis√≠vel na aba Actions
# - Poss√≠vel executar manualmente
